<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>LevenbergMarquardt Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="LevenbergMarquardt class" />
    <meta name="System.Keywords" content="Accord.Math.Optimization.LevenbergMarquardt class" />
    <meta name="System.Keywords" content="LevenbergMarquardt class, about LevenbergMarquardt class" />
    <meta name="Microsoft.Help.F1" content="Accord.Math.Optimization.LevenbergMarquardt" />
    <meta name="Microsoft.Help.Id" content="T:Accord.Math.Optimization.LevenbergMarquardt" />
    <meta name="Description" content="Levenberg-Marquardt algorithm for solving Least-Squares problems." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.Math.Optimization" />
    <meta name="file" content="T_Accord_Math_Optimization_LevenbergMarquardt" />
    <meta name="guid" content="T_Accord_Math_Optimization_LevenbergMarquardt" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Accord_Math_Optimization.htm" title="Accord.Math.Optimization" tocid="N_Accord_Math_Optimization">Accord.Math.Optimization</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Accord_Math_Optimization_LevenbergMarquardt.htm" title="LevenbergMarquardt Class" tocid="T_Accord_Math_Optimization_LevenbergMarquardt">LevenbergMarquardt Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Math_Optimization_LevenbergMarquardt__ctor.htm" title="LevenbergMarquardt Constructor " tocid="Overload_Accord_Math_Optimization_LevenbergMarquardt__ctor">LevenbergMarquardt Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Properties_T_Accord_Math_Optimization_LevenbergMarquardt.htm" title="LevenbergMarquardt Properties" tocid="Properties_T_Accord_Math_Optimization_LevenbergMarquardt">LevenbergMarquardt Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Accord_Math_Optimization_LevenbergMarquardt.htm" title="LevenbergMarquardt Methods" tocid="Methods_T_Accord_Math_Optimization_LevenbergMarquardt">LevenbergMarquardt Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>LevenbergMarquardt Class</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
              Levenberg-Marquardt algorithm for solving Least-Squares problems.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LST8BDD09C6_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8BDD09C6_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <a href="T_Accord_MachineLearning_ParallelLearningBase.htm">Accord.MachineLearning<span id="LST8BDD09C6_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8BDD09C6_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ParallelLearningBase</a><br />    <a href="T_Accord_Math_Optimization_BaseLeastSquaresMethod.htm">Accord.Math.Optimization<span id="LST8BDD09C6_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8BDD09C6_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>BaseLeastSquaresMethod</a><br />      <span class="selflink">Accord.Math.Optimization<span id="LST8BDD09C6_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8BDD09C6_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>LevenbergMarquardt</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Accord_Math_Optimization.htm">Accord.Math.Optimization</a><br />
    <strong>Assembly:</strong>
   Accord.Math (in Accord.Math.dll) Version: 3.8.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">LevenbergMarquardt</span> : <span class="identifier">BaseLeastSquaresMethod</span>, 
	<span class="identifier">ILeastSquaresMethod</span>, <span class="identifier">IConvergenceLearning</span></pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">LevenbergMarquardt</span>
	<span class="keyword">Inherits</span> <span class="identifier">BaseLeastSquaresMethod</span>
	<span class="keyword">Implements</span> <span class="identifier">ILeastSquaresMethod</span>, <span class="identifier">IConvergenceLearning</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script><a id="HT_RequestExampleLink" href="https://github.com/accord-net/framework/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=Accord.NET Framework: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/accord-net/framework/blob/master/Sources/Accord.Math/Optimization/Unconstrained/Least+Squares/LevenbergMarquardt.cs" title="View the source code">View Source</a></div><p>The <span class="selflink">LevenbergMarquardt</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Math_Optimization_LevenbergMarquardt__ctor.htm">LevenbergMarquardt<span id="LST8BDD09C6_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8BDD09C6_4?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Initializes a new instance of the <span class="selflink">LevenbergMarquardt</span> class.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Math_Optimization_LevenbergMarquardt__ctor_1.htm">LevenbergMarquardt(Int32)</a></td><td><div class="summary">
              Initializes a new instance of the <span class="selflink">LevenbergMarquardt</span> class.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Math_Optimization_LevenbergMarquardt_Adjustment.htm">Adjustment</a></td><td><div class="summary">
               Learning rate adjustment. 
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Math_Optimization_LevenbergMarquardt_Blocks.htm">Blocks</a></td><td><div class="summary">
              Gets or sets the number of blocks to divide the 
              Jacobian matrix in the Hessian calculation to
              preserve memory. Default is 1.
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_Accord_Math_Optimization_BaseLeastSquaresMethod_Convergence.htm">Convergence</a></td><td><div class="summary">
              Gets or sets the convergence verification method.
            </div> (Inherited from <a href="T_Accord_Math_Optimization_BaseLeastSquaresMethod.htm">BaseLeastSquaresMethod</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Math_Optimization_BaseLeastSquaresMethod_CurrentIteration.htm">CurrentIteration</a></td><td><div class="summary">
              Gets the current iteration number.
            </div> (Inherited from <a href="T_Accord_Math_Optimization_BaseLeastSquaresMethod.htm">BaseLeastSquaresMethod</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Math_Optimization_BaseLeastSquaresMethod_Function.htm">Function</a></td><td><div class="summary">
              Gets or sets a parameterized model function mapping input vectors
              into output values, whose optimum parameters must be found.
            </div> (Inherited from <a href="T_Accord_Math_Optimization_BaseLeastSquaresMethod.htm">BaseLeastSquaresMethod</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Math_Optimization_BaseLeastSquaresMethod_Gradient.htm">Gradient</a></td><td><div class="summary">
              Gets or sets a function that computes the gradient vector in respect
              to the function parameters, given a set of input and output values.
            </div> (Inherited from <a href="T_Accord_Math_Optimization_BaseLeastSquaresMethod.htm">BaseLeastSquaresMethod</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Math_Optimization_BaseLeastSquaresMethod_HasConverged.htm">HasConverged</a></td><td><div class="summary">
              Gets whether the algorithm has converged.
            </div> (Inherited from <a href="T_Accord_Math_Optimization_BaseLeastSquaresMethod.htm">BaseLeastSquaresMethod</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Math_Optimization_LevenbergMarquardt_Hessian.htm">Hessian</a></td><td><div class="summary">
              Gets the approximate Hessian matrix of second derivatives 
              generated in the last algorithm iteration. The Hessian is 
              stored in the upper triangular part of this matrix. See 
              remarks for details.
              </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Math_Optimization_BaseLeastSquaresMethod_Iterations.htm">Iterations</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Please use MaxIterations instead.
            </div> (Inherited from <a href="T_Accord_Math_Optimization_BaseLeastSquaresMethod.htm">BaseLeastSquaresMethod</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Math_Optimization_LevenbergMarquardt_LearningRate.htm">LearningRate</a></td><td><div class="summary">
               Levenberg's damping factor, also known as lambda.
             </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Math_Optimization_BaseLeastSquaresMethod_MaxIterations.htm">MaxIterations</a></td><td><div class="summary">
              Gets or sets the maximum number of iterations
              performed by the iterative algorithm. Default
              is 100.
            </div> (Inherited from <a href="T_Accord_Math_Optimization_BaseLeastSquaresMethod.htm">BaseLeastSquaresMethod</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Math_Optimization_BaseLeastSquaresMethod_NumberOfParameters.htm">NumberOfParameters</a></td><td><div class="summary">
              Gets the number of variables (free parameters) in the optimization problem.
            </div> (Inherited from <a href="T_Accord_Math_Optimization_BaseLeastSquaresMethod.htm">BaseLeastSquaresMethod</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Math_Optimization_BaseLeastSquaresMethod_NumberOfVariables.htm">NumberOfVariables</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Gets the number of variables (free parameters) in the optimization problem.
            </div> (Inherited from <a href="T_Accord_Math_Optimization_BaseLeastSquaresMethod.htm">BaseLeastSquaresMethod</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_ParallelLearningBase_ParallelOptions.htm">ParallelOptions</a></td><td><div class="summary">
              Gets or sets the parallelization options for this algorithm.
            </div> (Inherited from <a href="T_Accord_MachineLearning_ParallelLearningBase.htm">ParallelLearningBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Math_Optimization_BaseLeastSquaresMethod_Solution.htm">Solution</a></td><td><div class="summary">
              Gets the solution found, the values of the parameters which
              optimizes the function, in a least squares sense.
            </div> (Inherited from <a href="T_Accord_Math_Optimization_BaseLeastSquaresMethod.htm">BaseLeastSquaresMethod</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Math_Optimization_LevenbergMarquardt_StandardErrors.htm">StandardErrors</a></td><td><div class="summary">
              Gets standard error for each parameter in the solution.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_ParallelLearningBase_Token.htm">Token</a></td><td><div class="summary">
            Gets or sets a cancellation token that can be used
            to cancel the algorithm while it is running.
            </div> (Inherited from <a href="T_Accord_MachineLearning_ParallelLearningBase.htm">ParallelLearningBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Math_Optimization_BaseLeastSquaresMethod_Tolerance.htm">Tolerance</a></td><td><div class="summary">
              Gets or sets the maximum relative change in the watched value
              after an iteration of the algorithm used to detect convergence.
              Default is zero.
            </div> (Inherited from <a href="T_Accord_Math_Optimization_BaseLeastSquaresMethod.htm">BaseLeastSquaresMethod</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Math_Optimization_BaseLeastSquaresMethod_Value.htm">Value</a></td><td><div class="summary">
            Gets the value at the solution found. This should be
            the minimum value found for the objective function.
            </div> (Inherited from <a href="T_Accord_Math_Optimization_BaseLeastSquaresMethod.htm">BaseLeastSquaresMethod</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Math_Optimization_BaseLeastSquaresMethod_ComputeError.htm">ComputeError</a></td><td><div class="summary">
              Compute model error for a given data set.
            </div> (Inherited from <a href="T_Accord_Math_Optimization_BaseLeastSquaresMethod.htm">BaseLeastSquaresMethod</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Equals</span></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">Finalize</span></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetHashCode</span></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetType</span></td><td><div class="summary">Gets the <span class="nolink">Type</span> of the current instance.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Accord_Math_Optimization_LevenbergMarquardt_Initialize.htm">Initialize</a></td><td><div class="summary">
            This method should be implemented by child classes to initialize
            their fields once the <a href="P_Accord_Math_Optimization_BaseLeastSquaresMethod_NumberOfParameters.htm">NumberOfParameters</a> is known.
            </div> (Overrides <a href="M_Accord_Math_Optimization_BaseLeastSquaresMethod_Initialize.htm">BaseLeastSquaresMethod<span id="LST8BDD09C6_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8BDD09C6_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Initialize<span id="LST8BDD09C6_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8BDD09C6_6?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">MemberwiseClone</span></td><td><div class="summary">Creates a shallow copy of the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Math_Optimization_LevenbergMarquardt_Minimize.htm">Minimize</a></td><td><div class="summary">
              Attempts to find the best values for the parameter vector
              minimizing the discrepancy between the generated outputs
              and the expected outputs for a given set of input data.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">ToString</span></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_HasMethod.htm">HasMethod</a></td><td><div class="summary">
              Checks whether an object implements a method with the given name.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_Math_Matrix_IsEqual_577.htm">IsEqual</a></td><td><div class="summary">
                Compares two objects for equality, performing an elementwise 
                comparison if the elements are vectors or matrices.
            </div> (Defined by <a href="T_Accord_Math_Matrix.htm">Matrix</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To.htm">To(Type)</a></td><td>Overloaded.  <div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To__1.htm">To<span id="LST8BDD09C6_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8BDD09C6_7?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST8BDD09C6_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8BDD09C6_8?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LST8BDD09C6_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8BDD09C6_9?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td>Overloaded.  <div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID7RBSection" class="collapsibleSection"><p>
              While it is possible to use the <span class="selflink">LevenbergMarquardt</span> class as a standalone
              method for solving least squares problems, this class is intended to be used as
              a strategy for NonlinearLestSquares, as shown in the example below:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCCBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCCBA','cs','1','2');return false;">C#</a></div><div id="ID1EBCCBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCCBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCCBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCCBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCCBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Suppose we would like to map the continuous values in the</span>
<span class="highlight-comment">// second column to the integer values in the first column.</span>
<span class="highlight-keyword">double</span>[,] data =
{
    { <span class="highlight-number">-40</span>,    <span class="highlight-number">-21142.1111111111</span> },
    { <span class="highlight-number">-30</span>,    <span class="highlight-number">-21330.1111111111</span> },
    { <span class="highlight-number">-20</span>,    <span class="highlight-number">-12036.1111111111</span> },
    { <span class="highlight-number">-10</span>,      <span class="highlight-number">7255.3888888889</span> },
    {   <span class="highlight-number">0</span>,     <span class="highlight-number">32474.8888888889</span> },
    {  <span class="highlight-number">10</span>,     <span class="highlight-number">32474.8888888889</span> },
    {  <span class="highlight-number">20</span>,      <span class="highlight-number">9060.8888888889</span> },
    {  <span class="highlight-number">30</span>,    <span class="highlight-number">-11628.1111111111</span> },
    {  <span class="highlight-number">40</span>,    <span class="highlight-number">-15129.6111111111</span> },
};

<span class="highlight-comment">// Extract inputs and outputs</span>
<span class="highlight-keyword">double</span>[][] inputs = data.GetColumn(<span class="highlight-number">0</span>).ToJagged();
<span class="highlight-keyword">double</span>[] outputs = data.GetColumn(<span class="highlight-number">1</span>);

<span class="highlight-comment">// Create a Nonlinear regression using </span>
<span class="highlight-keyword">var</span> nls = <span class="highlight-keyword">new</span> NonlinearLeastSquares()
{
    NumberOfParameters = <span class="highlight-number">3</span>,

    <span class="highlight-comment">// Initialize to some random values</span>
    StartValues = <span class="highlight-keyword">new</span>[] { <span class="highlight-number">4.2</span>, <span class="highlight-number">0.3</span>, <span class="highlight-number">1</span> },

    <span class="highlight-comment">// Let's assume a quadratic model function: ax² + bx + c</span>
    Function = (w, x) =&gt; w[<span class="highlight-number">0</span>] * x[<span class="highlight-number">0</span>] * x[<span class="highlight-number">0</span>] + w[<span class="highlight-number">1</span>] * x[<span class="highlight-number">0</span>] + w[<span class="highlight-number">2</span>],

    <span class="highlight-comment">// Derivative in respect to the weights:</span>
    Gradient = (w, x, r) =&gt;
    {
        r[<span class="highlight-number">0</span>] = w[<span class="highlight-number">0</span>]* w[<span class="highlight-number">0</span>]; <span class="highlight-comment">// w.r.t a: a²  // https://www.wolframalpha.com/input/?i=diff+ax²+%2B+bx+%2B+c+w.r.t.+a</span>
        r[<span class="highlight-number">1</span>] = w[<span class="highlight-number">0</span>];       <span class="highlight-comment">// w.r.t b: b   // https://www.wolframalpha.com/input/?i=diff+ax²+%2B+bx+%2B+c+w.r.t.+b</span>
        r[<span class="highlight-number">2</span>] = <span class="highlight-number">1</span>;          <span class="highlight-comment">// w.r.t c: 1   // https://www.wolframalpha.com/input/?i=diff+ax²+%2B+bx+%2B+c+w.r.t.+c</span>
    },

    Algorithm = <span class="highlight-keyword">new</span> LevenbergMarquardt()
    {
        MaxIterations = <span class="highlight-number">100</span>,
        Tolerance = <span class="highlight-number">0</span>
    }
};


<span class="highlight-keyword">var</span> regression = nls.Learn(inputs, outputs);

<span class="highlight-comment">// Use the function to compute the input values</span>
<span class="highlight-keyword">double</span>[] predict = regression.Transform(inputs);</pre></div><div id="ID1EBCCBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-comment">' Suppose we would Like to map the continuous values in the</span>
<span class="highlight-comment">' second column to the integer values in the first column.</span>
<span class="highlight-keyword">Dim</span> data(,) <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> =
{
    {<span class="highlight-number">-40</span>, <span class="highlight-number">-21142.1111111111</span>},
    {<span class="highlight-number">-30</span>, <span class="highlight-number">-21330.1111111111</span>},
    {<span class="highlight-number">-20</span>, <span class="highlight-number">-12036.1111111111</span>},
    {<span class="highlight-number">-10</span>, <span class="highlight-number">7255.3888888889</span>},
    {<span class="highlight-number">0</span>, <span class="highlight-number">32474.8888888889</span>},
    {<span class="highlight-number">10</span>, <span class="highlight-number">32474.8888888889</span>},
    {<span class="highlight-number">20</span>, <span class="highlight-number">9060.8888888889</span>},
    {<span class="highlight-number">30</span>, <span class="highlight-number">-11628.1111111111</span>},
    {<span class="highlight-number">40</span>, <span class="highlight-number">-15129.6111111111</span>}
}

<span class="highlight-comment">' Extract inputs And outputs</span>
<span class="highlight-keyword">Dim</span> inputs <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>()() = data.GetColumn(<span class="highlight-number">0</span>).ToJagged()
<span class="highlight-keyword">Dim</span> outputs <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>() = data.GetColumn(<span class="highlight-number">1</span>)

<span class="highlight-comment">' Create a Nonlinear regression using </span>
<span class="highlight-keyword">Dim</span> nls <span class="highlight-keyword">As</span> NonlinearLeastSquares = <span class="highlight-keyword">New</span> NonlinearLeastSquares
<span class="highlight-keyword">With</span> nls
    .NumberOfParameters = <span class="highlight-number">3</span>

    <span class="highlight-comment">' Initialize to some random values</span>
    .StartValues = {<span class="highlight-number">4.2</span>, <span class="highlight-number">0.3</span>, <span class="highlight-number">1</span>}

    <span class="highlight-comment">' Let's assume a quadratic model function: ax² + bx + c</span>
    .<span class="highlight-keyword">Function</span> = <span class="highlight-keyword">Function</span>(w, x) w(<span class="highlight-number">0</span>) * x(<span class="highlight-number">0</span>) * x(<span class="highlight-number">0</span>) + w(<span class="highlight-number">1</span>) * x(<span class="highlight-number">0</span>) + w(<span class="highlight-number">2</span>)

    <span class="highlight-comment">' Derivative in respect to the weights</span>
    .Gradient = <span class="highlight-keyword">Sub</span>(w, x, r)
                    r(<span class="highlight-number">0</span>) = x(<span class="highlight-number">0</span>) * x(<span class="highlight-number">0</span>) <span class="highlight-comment">' w.r.t a: x² </span>
                    r(<span class="highlight-number">1</span>) = x(<span class="highlight-number">0</span>)     <span class="highlight-comment">' w.r.t b: x</span>
                    r(<span class="highlight-number">2</span>) = <span class="highlight-number">1</span>     <span class="highlight-comment">' w.r.t c: 1</span>
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">With</span>

<span class="highlight-keyword">Dim</span> algorithm <span class="highlight-keyword">As</span> LevenbergMarquardt = <span class="highlight-keyword">New</span> LevenbergMarquardt
<span class="highlight-keyword">With</span> algorithm
    .MaxIterations = <span class="highlight-number">100</span>
    .Tolerance = <span class="highlight-number">0</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">With</span>

nls.Algorithm = algorithm

<span class="highlight-keyword">Dim</span> regression <span class="highlight-keyword">As</span> NonlinearRegression = nls.Learn(inputs, outputs)

<span class="highlight-comment">' Use the function to compute the input values</span>
<span class="highlight-keyword">Dim</span> predict <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>() = regression.Transform(inputs)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCCBA");</script><p>
              However, as mentioned above it is also possible to use <span class="selflink">LevenbergMarquardt</span> 
              as a standalone class, as shown in the example below:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAACBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAACBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAACBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Example from https://en.wikipedia.org/wiki/Gauss%E2%80%93Newton_algorithm</span>

<span class="highlight-comment">// In this example, the Gauss–Newton algorithm will be used to fit a model to </span>
<span class="highlight-comment">// some data by minimizing the sum of squares of errors between the data and </span>
<span class="highlight-comment">// model's predictions.</span>

<span class="highlight-comment">// In a biology experiment studying the relation between substrate concentration [S]</span>
<span class="highlight-comment">// and reaction rate in an enzyme-mediated reaction, the data in the following table</span>
<span class="highlight-comment">// were obtained:</span>

<span class="highlight-keyword">double</span>[][] inputs = Jagged.ColumnVector(<span class="highlight-keyword">new</span> [] { <span class="highlight-number">0.03</span>, <span class="highlight-number">0.1947</span>, <span class="highlight-number">0.425</span>, <span class="highlight-number">0.626</span>, <span class="highlight-number">1.253</span>, <span class="highlight-number">2.500</span>, <span class="highlight-number">3.740</span> });
<span class="highlight-keyword">double</span>[] outputs = <span class="highlight-keyword">new</span>[] { <span class="highlight-number">0.05</span>, <span class="highlight-number">0.127</span>, <span class="highlight-number">0.094</span>, <span class="highlight-number">0.2122</span>, <span class="highlight-number">0.2729</span>, <span class="highlight-number">0.2665</span>, <span class="highlight-number">0.3317</span> };

<span class="highlight-comment">// It is desired to find a curve (model function) of the form</span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">//   rate = \frac{V_{max}[S]}{K_M+[S]}</span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// that fits best the data in the least squares sense, with the parameters V_max</span>
<span class="highlight-comment">// and K_M to be determined. Let's start by writing model equation below:</span>

LeastSquaresFunction function = (<span class="highlight-keyword">double</span>[] parameters, <span class="highlight-keyword">double</span>[] input) =&gt;
{
    <span class="highlight-keyword">return</span> (parameters[<span class="highlight-number">0</span>] * input[<span class="highlight-number">0</span>]) / (parameters[<span class="highlight-number">1</span>] + input[<span class="highlight-number">0</span>]);
};

<span class="highlight-comment">// Now, we can either write the gradient function of the model by hand or let</span>
<span class="highlight-comment">// the model compute it automatically using Newton's finite differences method:</span>

LeastSquaresGradientFunction gradient = (<span class="highlight-keyword">double</span>[] parameters, <span class="highlight-keyword">double</span>[] input, <span class="highlight-keyword">double</span>[] result) =&gt;
{
    result[<span class="highlight-number">0</span>] = -((-input[<span class="highlight-number">0</span>]) / (parameters[<span class="highlight-number">1</span>] + input[<span class="highlight-number">0</span>]));
    result[<span class="highlight-number">1</span>] = -((parameters[<span class="highlight-number">0</span>] * input[<span class="highlight-number">0</span>]) / Math.Pow(parameters[<span class="highlight-number">1</span>] + input[<span class="highlight-number">0</span>], <span class="highlight-number">2</span>));
};

<span class="highlight-comment">// Create a new Levenberg-Marquardt algorithm</span>
<span class="highlight-keyword">var</span> gn = <span class="highlight-keyword">new</span> LevenbergMarquardt(parameters: <span class="highlight-number">2</span>)
{
    Function = function,
    Gradient = gradient,
    Solution = <span class="highlight-keyword">new</span>[] { <span class="highlight-number">0.9</span>, <span class="highlight-number">0.2</span> } <span class="highlight-comment">// starting from b1 = 0.9 and b2 = 0.2</span>
};

<span class="highlight-comment">// Find the minimum value:</span>
gn.Minimize(inputs, outputs);

<span class="highlight-comment">// The solution will be at:</span>
<span class="highlight-keyword">double</span> b1 = gn.Solution[<span class="highlight-number">0</span>]; <span class="highlight-comment">// will be 0.362</span>
<span class="highlight-keyword">double</span> b2 = gn.Solution[<span class="highlight-number">1</span>]; <span class="highlight-comment">// will be 0.556</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAACBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID8RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Accord_Math_Optimization.htm">Accord.Math.Optimization Namespace</a></div><div class="seeAlsoStyle"><a href="T_Accord_Math_Optimization_GaussNewton.htm">Accord.Math.Optimization<span id="LST8BDD09C6_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8BDD09C6_10?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>GaussNewton</a></div><div class="seeAlsoStyle"><a href="T_Accord_Math_Differentiation_FiniteDifferences.htm">Accord.Math.Differentiation<span id="LST8BDD09C6_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8BDD09C6_11?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>FiniteDifferences</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>
